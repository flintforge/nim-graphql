[[units]]
  name = "@skip(if: false)"
  code = """
type Query {
  name: String
  color: Int
}
{
  name
  color @skip(if: false)
}
"""
  result = """
{
  "name":"superman",
  "color":567
}
"""

[[units]]
  name = "@skip(if: true)"
  code = """
type Query {
  name: String
  color: Int
}
{
  name
  color @skip(if: true)
}
"""
  result = """
{
  "name":"superman"
}
"""

[[units]]
  name = "@skip(if: $myTrue)"
  code = """
type Query {
  name: String
  color: Int
}
query ($myTrue: Boolean!) {
  name
  color @skip(if: $myTrue)
}
"""
  result = """
{
  "name":"superman"
}
"""

[[units]]
  name = "@skip(if: $myFalse)"
  code = """
type Query {
  name: String
  color: Int
}
query ($myFalse: Boolean!) {
  name
  color @skip(if: $myFalse)
}
"""
  result = """
{
  "name":"superman",
  "color":567
}
"""

[[units]]
  name = "@include(if: false)"
  code = """
type Query {
  name: String
  color: Int
}
{
  name
  color @include(if: false)
}
"""
  result = """
{
  "name":"superman"
}
"""

[[units]]
  name = "@include(if: true)"
  code = """
type Query {
  name: String
  color: Int
}
{
  name
  color @include(if: true)
}
"""
  result = """
{
  "name":"superman",
  "color":567
}
"""

[[units]]
  name = "@include(if: $myTrue)"
  code = """
type Query {
  name: String
  color: Int
}
query ($myTrue: Boolean!) {
  name
  color @include(if: $myTrue)
}
"""
  result = """
{
  "name":"superman",
  "color":567
}
"""

[[units]]
  name = "@include(if: $myFalse)"
  code = """
type Query {
  name: String
  color: Int
}
query ($myFalse: Boolean!) {
  name
  color @include(if: $myFalse)
}
"""
  result = """
{
  "name":"superman"
}
"""

[[units]]
  name = "merge very basic field"
  code = """
type Query {
  name: String
  color: Int
}
query {
  name
  name
}
"""
  result = """
{
  "name":"superman"
}
"""

[[units]]
  name = "simple field alias"
  code = """
type Query {
  name: String
  color: Int
}
query {
  name
  jumbo: name
}
"""
  result = """
{
  "name":"superman",
  "jumbo":"superman"
}
"""

[[units]]
  name = "field in set can merge should merge"
  code = """
type Human {
  name: String
  age: Int
}
type Query {
  human: Human
}
{
  human { name }
  human { name }
  human { age }
  human { age }
}
"""
  result = """
{
  "human":{
    "name":"spiderman",
    "age":100
  }
}
"""

[[units]]
  name = "execution path"
  errors = ["[11, 5]: Error: scalar 'age': expect string, but got 'Int'"]
  path = """["human","age"]"""
  code = """
type Human {
  name: String
  age: String
}
type Query {
  human: Human
}
{
  human {
    name
    age
  }
}
"""
  result = """
{
  "human":{
    "name":"spiderman",
    "age":null
  }
}
"""

[[units]]
  name = "execution path with list index"
  errors = ["[10, 5]: Fatal: Field 'number' should not return null"]
  path = """["human","number",1]"""
  code = """
type Human {
  name: String
  number: [Int!]
}
type Query {
  human: Human
}
{
  human {
    number
    name
  }
}
"""
  result = """
{
  "human":{
    "number":[345,null]
  }
}
"""

[[units]]
  name = "execution error should have better text position"
  path = """["__type"]"""
  errors = ["[5, 3]: Fatal: Field '__type' cannot be resolved: \"'__Querys' not defined\""]
  opName = "intros"
  code = """
type Query {
  name: String
}
query intros {
  __type(name: "__Querys") {
    fields {
      name
    }
  }
}
"""
  result = """
{
  "__type":null
}
"""

[[units]]
  name = "missing input object field should be filled and ordered by executor"
  code = """
input EchoInput {
  one: String
  two: Int
  three: Boolean = false
  four: Float = 456.7
  five: ID
}
type Echo {
  one: String
  two: Int
  three: Boolean
  four: Float
  five: ID
}
type Query {
  echo(arg: EchoInput): Echo
}
{
  echo(arg: {two: 666, one: "Hello"}) {
    one
    two
    three
    four
    five
  }
}
"""
  result = """
{
  "echo":{
    "one":"Hello",
    "two":666,
    "three":false,
    "four":456.7,
    "five":null
  }
}
"""

